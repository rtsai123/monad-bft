name: Test Command

on:
  issue_comment:
    types: [created]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  check-command:
    if: |
      github.event.issue.pull_request && 
      contains(github.event.comment.body, '/test all')
    runs-on: ubuntu-latest
    outputs:
      pr_number: ${{ steps.get-pr.outputs.pr_number }}
    steps:
      - name: Get PR number
        id: get-pr
        run: |
          echo "pr_number=${{ github.event.issue.number }}" >> $GITHUB_OUTPUT
      
      - name: React to comment
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.reactions.createForIssueComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: context.payload.comment.id,
              content: 'rocket'
            });
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `Starting full test suite... :hourglass_flowing_sand:`
            });

  run-tests:
    needs: check-command
    runs-on: ubuntu-latest
    steps:
      # For testing on fork - simplified version
      - name: Checkout PR
        uses: actions/checkout@v4
        with:
          submodules: false

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.85.0
          components: rustfmt, clippy

      - name: Install nightly for fmt
        uses: dtolnay/rust-toolchain@nightly
        with:
          toolchain: nightly-2024-12-10
          components: rustfmt

      - name: Run basic tests
        id: tests
        run: |
          echo "Running tests for PR #${{ needs.check-command.outputs.pr_number }}"
          
          # Basic checks that work without private submodules
          cargo +nightly-2024-12-10 fmt --all --check || true
          
          echo "Note: Full tests require private submodules"

      - name: Post results
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const status = '${{ job.status }}';
            const emoji = status === 'success' ? '✅' : '❌';
            const prNumber = ${{ needs.check-command.outputs.pr_number }};
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: `${emoji} Test command completed: **${status}**
              
              [View results](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
              
              Triggered by: @${{ github.event.comment.user.login }}`
            });
