name: Test External PR

on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'Pull Request number to test'
        required: true
        type: number

permissions:
  contents: read
  pull-requests: write

jobs:
  test-external-pr:
    runs-on: self-hosted
    container:
      image: peach10.devcore4.com/category-labs/builder
      options: --privileged
    steps:
      - name: Log execution
        run: |
          echo "::notice::Manual test triggered by ${{ github.actor }} for PR #${{ inputs.pr_number }}"

      - name: Generate a token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.REPO_READONLY_GITHUB_APP_ID }}
          private_key: ${{ secrets.REPO_READONLY_GITHUB_APP_KEY }}
          permissions: >-
            {"contents": "read"}

      - name: Checkout PR
        uses: actions/checkout@v4
        with:
          ref: refs/pull/${{ inputs.pr_number }}/head
          submodules: recursive
          token: ${{ steps.generate_token.outputs.token }}

      - run: rustup toolchain install nightly-2024-12-10 --profile minimal --component rustfmt
      - run: rustup toolchain install 1.85.0-x86_64-unknown-linux-gnu --profile minimal --component clippy

      - name: Install cargo-binstall
        uses: cargo-bins/cargo-binstall@main
      
      - name: Install cargo-shear
        run: cargo binstall --no-confirm cargo-shear

      - name: Run full test suite
        run: |
          echo "Running full test suite for external PR #${{ inputs.pr_number }}"
          
          # All the checks from the main workflow
          cargo update --workspace --locked
          cargo shear
          cargo +nightly-2024-12-10 fmt --all --check
          cargo clippy --all-targets --all-features -- -D warnings
          cargo check --all-targets --all-features
          cargo test --release --all-targets --all-features
          cargo doc -p monad-event-ring -p monad-exec-events
          cargo test --release --doc --all-features
          
          # WASM check
          rustup target add wasm32-unknown-unknown
          cargo check --target wasm32-unknown-unknown -p monad-debugger

      - name: Post results
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const status = '${{ job.status }}';
            const emoji = status === 'success' ? '✅' : '❌';
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ inputs.pr_number }},
              body: `${emoji} Manual full test completed: **${status}**
              
              [View detailed results](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
              
              Triggered by: @${{ github.actor }}`
            });
